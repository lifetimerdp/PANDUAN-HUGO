Tutorial dasar menggunakan hugo

sumber belajar: https://gohugo.io/templates/introduction

[ 1. Variable ]
---------------------------------------------------------------------------------------------------------------------------------------------------------
1.1 Cara membuat variable di hugo
$variable_name := "ini adalah isi variable atau valuenya"


1.2 Cara memanggil variable yang sudah dibuat
{{ $variable_name }}


1.3 Mengubah nilai variable
$halaman := "ini halaman biasa"
<h1>{{ $halaman }}</h1>
{{ if .IsHome }}
  $halaman = "ini halaman home"   => Gunakan tanda "=" untuk mendefinisikan ulang variable.
  <h1>{{ $halaman }}</h1>
{{ end }}


1.4 Varible default atau variable yang sudah dibuatkan hugo
sumber: https://gohugo.io/variables
---------------------------------------------------------------------------------------------------------------------------------------------------------


[ 2. Function ]
---------------------------------------------------------------------------------------------------------------------------------------------------------
2.1 Function bawaan / default
sumber: https://gohugo.io/functions



2.2 Function untuk operator matematika
- add (penjumlahan)
{{ add 1 2 }} -> 3
{{ add 1 2.1 }} -> 3.1

- sub (pengurangan)
{{ sub 3 1 }} -> 2
{{ sub 3 2.5 }} -> 0.5

- mul (perkalian)
{{ mul 2 5 }} -> 10
{{ mul 1.2 4 }} -> 4.8

- div (pembagian)
{{ div 6 3 }} -> 2
{{ div 6 4.0 }} -> 1.5

- mod (modulus atau sisa bagi)
{{ mod 15 3 }} -> 0

- modBool (modulus yang dikonversi menjadi nilai boolean. Jika sisa bagi atau modulus sama dengan 0, maka menghasilkan true)
{{ modBool 15 3 }} -> true

- math.Ceil (membulatkan angka ke paling besar)
{{ math.Ceil 2.1 }} -> 3

- math.Floor (membulatkan angka ke paling kecil)
{{ math.Floor 1.9 }} -> 1

- math.Log (mengkonversi dari angka ke logaritmanya)
{{ math.Log 42 }} -> 3.737

- math.Max (memilih angka terbesar dari dua angka)
{{ math.Max 1 2 }} -> 2

- math.Min (memilih angka terkecil dari dua angka)
{{ math.Min 1 2 }} -> 1

- math.Pow (menghitung hasil angka yang dipangkatkan)
{{ math.Pow 2 3 }} -> 8     artinya:  2 pangkat 3 (atau 2x2x2)

- math.Round (membulatkan angka secara otomatis dengan mencari yang terdekat. 
              .0 sampai .4 dibulatkan kebawah dan .5 sampai .9 dibulatkan ke atas)
{{ math.Round 1.5 }} -> 2
{{ math.Round 1.4 }} -> 1

- math.Sqrt (mengembalikan hasil dari akar kuadrat angka)
{{ math.Sqrt 81 }} -> 9



2.3 Function untuk operator perbandingan
- gt (lebih dari > )
{{ if gt 10 5 }}
  kondisi true
{{ else }}
  kondisi false
{{ end }}

- lt (kurang dari < )
{{ if lt 5 10 }}
  kondisi true
{{ else }}
  kondisi false
{{ end }}

- ge (lebih besar atau sama dengan >= )
{{ if ge 10 5 }}
  kondisi true
{{ else }}
  kondisi false
{{ end }}

- le (lebih kecil atau sama dengan <= )
{{ if le 10 5 }}
  kondisi true
{{ else }}
  kondisi false
{{ end }}

- ne (tidak sama dengan != )
{{ if ne .Section "blog" }}
  kondisi jika .Section bukan "blog"
{{ end }}

- eq (sama dengan sama dengan == )
{{ if eq .Section "blog" }}
  kondisi jika .Section adalah "blog"
{{ end }}



2.4 Function untuk mengambil elemen dari sebuah folder, file, atau url
- path.Base (mengambil elemen paling akhir dan tanpa menghapus ekstensi file)
{{ path.Base "layouts/_default/baseof.html" }} => "baseof.html"

- path.BaseName (mengambil elemen paling akhir dan menghapus ekstensi jika ada)
{{ path.BaseName "layouts/_default/baseof.html" }} => "baseof"

- path.Dir (mengambil elemen, kecuali elemen paling akhir)
{{ path.Dir "a/news.html" }} => "a"
{{ path.Dir "news.html" }} => "."
{{ path.Dir "a/b/c" }} => "a/b"
{{ path.Dir "/x/y/z" }} => "/x/y"

- path.Ext (hanya mengambil ekstensi file)
{{ path.Ext "a/b/c/news.html" }} => ".html"

- path.Join (menggabungkan jalur folder atau file)
{{ path.Join "partial" "news.html" }} => "partial/news.html"
{{ path.Join "foo/baz" "bar" }} => "foo/baz/bar"

- path.Split (memecah jalur folder dan file)
{{ $dirFile := path.Split "a/news.html" }} → $dirFile.Dir → "a/", $dirFile.File → "news.html"
{{ $dirFile := path.Split "news.html" }} → $dirFile.Dir → "", $dirFile.File → "news.html"
{{ $dirFile := path.Split "a/b/c" }} → $dirFile.Dir → "a/b/", $dirFile.File →  "c"



2.5 Function untuk memformat dan mengkonversi (misalnya angka ke mata uang 100 jadi 100$, 80 jadi 80% dll)
sumber: https://gohugo.io/functions/lang


2.6 Function untuk menghitung string
- strings.Count
{{ "aaabaab" | strings.Count "a" }}	-> 5
{{ "aaabaab" | strings.Count "aa" }}	-> 2
{{ "aaabaab" | strings.Count "aaa" }}	-> 1
{{ "aaabaab" | strings.Count "" }}	-> 8    jika yang ditargetkan adalah string kosong, maka nilainya = 1 + jumlah seluruh string


2.7 Function untuk mengecek string terakhir
{{ $pathPdf := "/source/pdf/file.pdf" }}
{{ strings.HasSuffix $pathPdf "pdf" }} -> true
{{ strings.HasSuffix $pathPdf "txt" }} -> false


2.8 Function untuk mengubah spasi di string menjadi tanda penghubung -
{{ anchorize "This is a header" }} --> "this-is-a-header"
{{ anchorize "This is also    a header" }} --> "this-is-also----a-header"


2.9 Function untuk membuat string yang sama berulang kali
{{ strings.Repeat 3 "yo"}} -> "yoyoyo"


3.0 Function untuk folder partials
{{ partial "header.html" }} -> "layouts/partials/header.html"


[ 4. Logika ]
---------------------------------------------------------------------------------------------------------------------------------------------------------
4.1 If Condition
{{ if kondisinya }}

{{ else if kondisi kedua }}

{{ else }}

{{ end }}


4.2 Range untuk pengulangan data
- Print data array
{{ range $array }}
    {{ . }}      Titik untuk mengeluarkan output semua data yang terdapat dalam $array
{{ end }}


- Mengambil data indeks dan value $array
{{ range $array_index, $array_value := $array }}
    {{ $array_index }} -- {{ $array_value }}
{{ end }}


- Array dengan kondisi if
{{ range $array }}
     {{ . }}
{{ else }}
     Array kosong!
{{ end }}


4.3 With untuk pengulangan function (Banyak digunakan untuk mengambil data di front matter, misalnya tags, title dll)
{{ with .Param "description" }}
  {{ . }}
{{ else }}
  {{ .Summary }}
{{ end }}


4.4 and
{{ if and (isset .Params "title") (isset .Params "description") }}
  kondisi true
{{ end }}


4.5 or
{{ if or (isset .Params "title") (isset .Params "description") }}
  kondisi true
{{ end }}

cara mudah:
{{ if isset .Params "title" | or isset .Params "description" }}
  kondisi true
{{ end }}


4.6 where function (digunakan untuk menyelam atau mencari lebih dalam dari data array)
{{ if where .Pages "Section" "blog" }}    => jika halaman adalah halaman blog, maka
  {{ .Content }}                          => tampilkan konten
{{ end }}

4.7 where dengan operator perbandingan        => bisa menggunakan semua operator perbandingan, dan in, atau not in, sama intersect
{{ if where .Pages "Section" "!=" "blog" }}   => dokumentasi https://gohugo.io/functions/where
  Ini bukan halaman blog
{{ end }}

4.8 
---------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------------------------------------



Tambahan:
1. list.html untuk mengatur halaman yang menampilkan list postingan seperti halaman blog (umumnya disebut halaman list karena menampilkan list dari konten)

1.1 index.html untuk mengatur apa yang mau ditampilkan di home page

2. single.html untuk mengatur halaman tunggal. Ini adalah halaman yang kita buat di folder content (file yang berekstensi .md)
   Langsung jadi tanpa perlu mengatur -> https://gohugo.io/templates/single-page-templates

3. baseof.html mengatur semua bagian dasar dari situs. Misalnya struktur dasar html seperti <html>, <head>, <body>.
   Umumnya <head>, <body> akan ditulis di file:
   - head.html (untuk mengatur file tersembunyi seperti tag meta)
   - header.html (untuk mengatur header semua halaman situs)
   - footer.html (untuk mengatur footer semua halaman situs)

4. index.html, 404.html, dan lainnya adalah bagian content dari baseof.html. Karena ini berubah untuk halaman yang berbeda. Kita dapat
   mengaturnya menggunakan {{ block "main" . }}{{ end }} di baseof.html
   
   Setalah itu, kita hanya perlu mengaturnya di file.html yang kita mau gunakan sebagai konten halaman misalnya index.html, 404.html, dll
   {{ define "main" }}
      Kontennya disini
   {{ end }}

5. _index.md adalah file untuk mengatur halaman yang terdapat di folder content. Ini seperti file konfigurasi khusus untuk halaman tersebut.
   Kita juga dapat membuat halaman untuk sub-folder (content/folder/sub-folder) karena biasanya hugo hanya membuat halaman pada tingkat folder.
   ---
   title: "halaman blog"
   summary: "ini adalah halaman blog"
   ---
  
   Ini adalah halaman blog dan kita dapat mengatur halaman di file ini _index.md


6. archetypes/default.md adalah file untuk mengatur front matter apa yang ingin ditampilkan di file.md
   ---
   title: "{{ replace .Name "-" " " | title }}"
   date: {{ .Date }}
   draft: false
   ---
   
   Selain default.md, kalian juga dapat membuat file untuk mengatur file yang berbeda, misalnya penulisnya beda.
   Buat file dengan nama yang sama dengan folder yang ditargetkan. Misalnya blog.md akan merujuk ke content/blog/

7. front matter adalah cara untuk mengatur isi dari file markdown
   ---
   title: "kucing beranak"
   description: "kucing beranak adalah istilah untuk kucing yang mempunyai anak"
   ---
   
   daftar front matter default dari hugo => https://gohugo.io/content-management/front-matter
   
   Note: Isi dari front matter dapat kita gunakan di file.html dengan function yang sudah disediakan hugo.
         Biasanya file tertentu memiliki cara yang berbeda untuk menampilkan isi dari front matter ini.
         Silahkan baca dokumentasinya 
   
8. layouts/_default/section.html untuk mengatur setiap page seperti blog page, atau custom page lainnya.
   https://gohugo.io/templates/section-templates/#example-creating-a-default-section-template


9. mengatur taxonomy atau halaman tags. Taxonomy otomatis dibuatkan halaman jika front matter menggunakan sebuah tags:
   akses di https://url.com/tags. Kalian dapat menampilkan list dari tags yang sudah dibuat di home page, atau halaman lainnya
   menggunakan function di hugo
   
   
10. folder data adalah folder yang digunakan untuk menyimpan data, terutama database versi kecil. Misalnya database dalam bentuk json




# membuat folder web hugo
- hugo new site namaweb
- cd namaweb
- git init


# membuat tema baru
- hugo new theme namatema

  keterangan:
    - layouts berisi folder dan file untuk website
    - layouts/_default berisi halaman single
    - layouts/partials berisi bagian-bagian dari web seperti header, footer, section dll
    - layouts/_default/baseof.html adalah file dasar untuk mengatur kode bawaan setiap halaman html yang dibuat


# mengatur baseof.html
- Kegunaan file baseof.html adalah untuk membuat kode html default untuk setiap halaman atau file berformat .html yang dibuat.
  Ini seperti struktur dasar atau pondasi untuk setiap halaman.


# memanggil parameter atau variable dari config.toml
- Gunakan kurung kurawal double {{ .NamaVariablenya }}
- Misalnya memanggil title dari config.toml
  {{ .Title }}


# looping data semua halaman format .md yang sudah dibuat
  <ul>
  {{ range .Site.RegularPages }} artinya looping semua page.md yang kita buat. Ini seperti membuat sebuah for loop
    <li>
        <a href="{{.Permalink}}">{{.Title}}</a>
        <span>{{.Date.Format "Monday, January 2, 2006"}}</span>
    </li>
  {{ end }}
  </ul>


# looping data berdasarkan folder tertentu
  <ul>
  {{ range where .Site.RegularPages "Section" "namafolder" }} artinya looping semua page.md yang ada didalam folder tujuan
    <li>
        <a href="{{.Permalink}}">{{.Title}}</a>
        <span>{{.Date.Format "Monday, January 2, 2006"}}</span>
    </li>
  {{ end }}
  </ul>

baseof.html => untuk mengatur setiap file .html misalnya kode dasar yang ada setiap membuat file.html
list.html   => untuk mengatur setiap halaman. misalnya halaman /blog atau /belajar
single.html => untuk mengatur setiap postingan.md

| Sumber informasi: https://gohugo.io/variables/page |


# front matter
- front matter adalah syntax yang digunakan untuk mengatur data pada postingan kita. Contohnya seperti:
  ---
  title: "Mari Belajar Hugo"
  date: 2022-09-19T15:25:14+07:00
  draft: false
  ---

sumber informasi: https://gohugo.io/content-management/front-matter


# cara memanggil variable dari file.md atau file postingan ke file.html lainnya

misalnya: post.md
---
title: "Mari Belajar Hugo"
date: 2022-09-19T15:25:14+07:00
categories: "teknology"
img_first: "https://link_img.png"
---

saya mau manggil img_first di single.html
<img src='{{ .Params.img_first }}' alt='' width='500'>

jika ingin menerapkan if dan else. caranya seperti dibawah ini
------------------------------------------------------
  {{ if isset .Params "img_first" }}
  <img src="{{ .Params.img_first }}" alt="" width="400">
  {{ else }}
  Gambar Kosong
  {{ end }}
------------------------------------------------------
sumber: https://gohugo.io/variables/page/#page-level-params


# atur konfigurasi default untuk setiap file.md
- hapus _default.md di archetypes dan buka default.md di themes/doni/archetypes/default.md
- sesuaikan dengan kebutuhan, misalnya

---
title: "{{ replace .Name "-" " " | title }}"
date: {{ .Date }}
Tags:
draft: false
---

- hugo new blog/post3.md


# Tagging atau kategori

sumber: https://gohugo.io/content-management/taxonomies/
sumber: https://gohugo.io/variables/taxonomy


# Ramah SEO
- atur title halaman
- atur meta description
- tambahkan meta card twitter
- etc


# Membuat taxonomy atau tag kustom sendiri
di post misalnya post1.md
---
title: ""
description: ""
custom_tags: [mencoba]
---

di config.toml
[taxonomies]
  tag = "tags"
  category = "categories"
  custom_tag = "custom_tags"



# Template hugo
